{"ast":null,"code":"var _jsxFileName = \"/Users/master/projects/Personal/TypeScript/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport api from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]); // Usando o <> pode-se especificar previamente o tipo de variável que a variável de estado terá\n\n  useEffect(() => {\n    api.get('/users').then(res => {\n      // Um dos parâmetros de tipagem de get é data que pode receber qualquer 'any' tipo,\n      // através do <InterfaceXpto> especificamos o tipo que será atribuído ao método (no caso, get)\n      setUsers(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Users list\", users.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: users.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/master/projects/Personal/TypeScript/frontend/src/App.tsx"],"names":["React","useState","useEffect","api","App","users","setUsers","get","then","res","data","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAU,EAAV,CAAlC,CADa,CACmC;;AAEhDC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CAACI,GAAJ,CAAiB,QAAjB,EAA2BC,IAA3B,CAAgCC,GAAG,IAAI;AACrC;AACA;AACAH,MAAAA,QAAQ,CAACG,GAAG,CAACC,IAAL,CAAR;AACD,KAJD;AAKD,GANQ,EAMP,EANO,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,6BAEGL,KAAK,CAACM,GAAN,CAAUC,IAAI,iBAAI;AAAA,gBAAIP,KAAK,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,YAAlB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAhBQT,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './services/api';\n\ninterface IUser {\n  name: string,\n  email: string\n}\n\nfunction App() {\n  const [users, setUsers] = useState<IUser[]>([]) // Usando o <> pode-se especificar previamente o tipo de variável que a variável de estado terá\n\n  useEffect(() => {\n    api.get<IUser[]>('/users').then(res => { \n      // Um dos parâmetros de tipagem de get é data que pode receber qualquer 'any' tipo,\n      // através do <InterfaceXpto> especificamos o tipo que será atribuído ao método (no caso, get)\n      setUsers(res.data)\n    })\n  },[])\n  return (\n    <div className=\"App\">\n      Users list\n      {users.map(item => <p>{users.name}</p>)}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}